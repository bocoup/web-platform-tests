version: 1
policy:
  pullRequests: collaborators
tasks:
  $flattenDeep:
    - $if: tasks_for == "github-push"
      then:
        $if: event.ref == "refs/heads/master"
        then:
          $map: [{name: firefox, channel: nightly}, {name: chrome, channel: dev}]
          each(browser):
            $map:
              - [testharness, 1, 15]
              - [testharness, 2, 15]
              - [testharness, 3, 15]
              - [testharness, 4, 15]
              - [testharness, 5, 15]
              - [testharness, 6, 15]
              - [testharness, 7, 15]
              - [testharness, 8, 15]
              - [testharness, 9, 15]
              - [testharness, 10, 15]
              - [testharness, 11, 15]
              - [testharness, 12, 15]
              - [testharness, 13, 15]
              - [testharness, 14, 15]
              - [testharness, 15, 15]
              - [reftest, 1, 10]
              - [reftest, 2, 10]
              - [reftest, 3, 10]
              - [reftest, 4, 10]
              - [reftest, 5, 10]
              - [reftest, 6, 10]
              - [reftest, 7, 10]
              - [reftest, 8, 10]
              - [reftest, 9, 10]
              - [reftest, 10, 10]
              - [wdspec, 1, 1]
            each(chunk):
              taskId: {$eval: 'as_slugid(browser.name + browser.channel + chunk[0] + str(chunk[1]))'}
              taskGroupId: {$eval: 'as_slugid("task group")'}
              created: {$fromNow: ''}
              deadline: {$fromNow: '24 hours'}
              provisionerId: aws-provisioner-v1
              # Contributors interested in configurating TaskCluster to run
              # against their fork of WPT should change the `workerType` to
              # "github-worker".
              workerType: wpt-docker-worker
              metadata:
                name: wpt-${browser.name}-${browser.channel}-${chunk[0]}-${chunk[1]}
                description: >-
                  A subset of WPT's "${chunk[0]}" tests (chunk number ${chunk[1]}
                  of ${chunk[2]}), run in the ${browser.channel} release of
                  ${browser.name}.
                owner: ${event.pusher.email}
                source: ${event.repository.url}
              payload:
                image: gsnedders/web-platform-tests:0.13
                maxRunTime: 7200
                artifacts:
                  public/results:
                    path: /home/test/artifacts
                    type: directory
                command:
                  - /bin/bash
                  - --login
                  - -c
                  - set -ex;
                    ~/start.sh
                      ${event.repository.url}
                      ${event.ref[len('refs/heads/'):]}
                      ${event.after}
                      ${browser.name}-${browser.channel};
                    cd ~/web-platform-tests;
                    ./wpt manifest-download || true;
                    ./tools/ci/taskcluster-run.py
                      --browser ${browser.name}
                      --
                      --log-tbpl=../artifacts/log_tbpl.log
                      --log-tbpl-level=info
                      --log-wptreport=../artifacts/wpt_report.json
                      --log-mach=-
                      -y
                      --no-pause
                      --no-restart-on-unexpected
                      --install-fonts
                      --no-fail-on-unexpected
                      --test-type=${chunk[0]}
                      --this-chunk=${chunk[1]}
                      --total-chunks=${chunk[2]};
                    gzip ../artifacts/wpt_report.json;
    - $if: tasks_for == "github-pull-request"
      then:
        $map: [{name: firefox, channel: nightly}, {name: chrome, channel: dev}]
        each(browser):
          $map:
            - name: wpt-${browser.name}-${browser.channel}-stability
              description: >-
                Verify that all tests affected by a pull request are stable
                when executed in ${browser.name}.
              extra_args: '--verify'
            - name: wpt-${browser.name}-${browser.channel}-results
              description: >-
                Collect results for all tests affected by a pull request in
                ${browser.name}.
              extra_args: '--no-fail-on-unexpected --log-wptreport=../artifacts/wpt_report.json'
          each(operation):
            taskId: {$eval: 'as_slugid(operation.name)'}
            taskGroupId: {$eval: 'as_slugid("task group")'}
            created: {$fromNow: ''}
            deadline: {$fromNow: '24 hours'}
            provisionerId: aws-provisioner-v1
            # Contributors interested in configurating TaskCluster to run
            # against their fork of WPT should change the `workerType` to
            # "github-worker".
            workerType: wpt-docker-worker
            metadata:
              name: ${operation.name}
              description: ${operation.description}
              owner: ${event.pull_request.user.login}@users.noreply.github.com
              source: ${event.repository.url}
            payload:
              image: gsnedders/web-platform-tests:0.13
              maxRunTime: 7200
              artifacts:
                public/results:
                  path: /home/test/artifacts
                  type: directory
              command:
                - /bin/bash
                - --login
                - -c
                - set -ex;
                  ~/start.sh
                    ${event.repository.clone_url}
                    ${event.pull_request.base.ref}
                    ${event.pull_request.base.sha}
                    ${browser.name}-${browser.channel};
                  cd ~/web-platform-tests;
                  ./wpt manifest-download || true;
                  git fetch
                    ${event.repository.clone_url}
                    refs/pull/${event.number}/head;
                  git checkout FETCH_HEAD;
                  result=0;
                  ./tools/ci/taskcluster-run.py
                    --browser ${browser.name}
                    --commit-range ${event.pull_request.base.sha}...
                    --
                    ${operation.extra_args}
                    --log-tbpl=../artifacts/log_tbpl.log
                    --log-tbpl-level=info
                    --log-mach=-
                    -y
                    --no-pause
                    --no-restart-on-unexpected
                     --install-fonts || result=$?;
                  if [ -f ../artifacts/wpt_report.json ]; then gzip ../artifacts/wpt_report.json; fi;
                  echo $result > ../artifacts/run-return-code.txt;
                  echo "Command exited with code $result (failures are allowed while this task is being vetted)."
