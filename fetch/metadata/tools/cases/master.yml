---
- title: Fetch Metadata - Sec-Fetch-Site - redirection from HTTP
  fileName: sec-fetch-site
  headerName: sec-fetch-site
  all_subtests:
    - description: HTTPS downgrade (header not sent)
      origins: [sameOrigin, httpOrigin]
      expected: NULL
    - description: HTTPS upgrade
      origins: [httpOrigin, sameOrigin]
      expected: cross-site
    - description: HTTPS downgrade-upgrade
      origins: [sameOrigin, httpOrigin, sameOrigin]
      expected: cross-site
  each_subtest:
    # Unused
    # TODO(jugglinmike) document rationale
    cors-preflight.sub.html: []
    # Unused
    # - the request mode of all "classic" worker scripts is set to
    #   "same-origin"
    #   https://html.spec.whatwg.org/#fetch-a-classic-worker-script
    # - the request mode of all "top-level "module" worker scripts is set to
    #   "same-origin":
    #   https://html.spec.whatwg.org/#fetch-a-single-module-script
    worker-dedicated-constructor.sub.html: []

    appcache-manifest.sub.https.html: [{}]
    element-image.sub.html: [{}]
    element-script.sub.html:
      - description: ' - classic script'
      - description: ' - module script'
        elementAttrs: { type: module }
    element-video.sub.html: [{}]
    fetch.sub.html: [{}]
    font.sub.html: [{}]
    form-submission.sub.html:
      - description: ' - GET'
        method: GET
      - description: ' - POST'
        method: POST
    global-properties.sub.html:
      - description: ' - location'
        api: location
      - description: ' - location.href'
        api: location.href
      - description: ' - location.assign'
        api: location.assign
      - description: ' - location.replace'
        api: location.replace
    script-module-import-dynamic.sub.html: [{}]
    script-module-import-static.sub.html: [{}]
    video-poster.sub.html: [{}]
    worker-dedicated-importscripts.sub.html: [{}]

- title: Fetch Metadata - Sec-Fetch-Site - redirection from HTTPS
  fileName: sec-fetch-site.https
  headerName: sec-fetch-site
  all_subtests:
    - description: Same-Origin -> Cross-Site -> Same-Origin redirect
      origins: [sameOrigin, crossSite, sameOrigin]
      expected: cross-site
    - description: Cross-Site -> Same Origin
      origins: [crossSite, sameOrigin]
      expected: cross-site
    - description: Cross-Site -> Same-Site
      origins: [crossSite, sameSite]
      expected: cross-site
    - description: Cross-Site -> Cross-Site
      origins: [crossSite, crossSite]
      expected: cross-site
    - description: Same-Origin -> Same Origin
      origins: [sameOrigin, sameOrigin]
      expected: same-origin
    - description: Same-Origin -> Same-Site
      origins: [sameOrigin, sameSite]
      expected: same-site
    - description: Same-Origin -> Cross-Site
      origins: [sameOrigin, crossSite]
      expected: cross-site
    - description: Same-Site -> Same Origin
      origins: [sameSite, sameOrigin]
      expected: same-site
    - description: Same-Site -> Same-Site
      origins: [sameSite, sameSite]
      expected: same-site
    - description: Same-Site -> Cross-Site
      origins: [sameSite, crossSite]
      expected: cross-site
  each_subtest:
    # Unused
    # TODO(jugglinmike) document rationale
    cors-preflight.sub.html: []
    # Unused
    # - the request mode of all "classic" worker scripts is set to
    #   "same-origin"
    #   https://html.spec.whatwg.org/#fetch-a-classic-worker-script
    # - the request mode of all "top-level "module" worker scripts is set to
    #   "same-origin":
    #   https://html.spec.whatwg.org/#fetch-a-single-module-script
    worker-dedicated-constructor.sub.html: []

    appcache-manifest.sub.https.html: [{}]
    element-image.sub.html: [{}]
    element-script.sub.html:
      - description: ' - classic script'
      - description: ' - module script'
        elementAttrs: { type: module }
    element-video.sub.html: [{}]
    fetch.sub.html: [{ init: { mode: no-cors } }]
    font.sub.html: [{}]
    form-submission.sub.html:
      - description: ' - GET'
        method: GET
      - description: ' - POST'
        method: POST
    global-properties.sub.html:
      - description: ' - location'
        api: location
      - description: ' - location.href'
        api: location.href
      - description: ' - location.assign'
        api: location.assign
      - description: ' - location.replace'
        api: location.replace
    script-module-import-dynamic.sub.html: [{}]
    script-module-import-static.sub.html: [{}]
    video-poster.sub.html: [{}]
    worker-dedicated-importscripts.sub.html: [{}]

- title: Fetch Metadata - Sec-Fetch-Site - redirection with mixed content
  # These tests verify the effect that redirection has on the request's "site".
  # The initial request must be made to a resource that is "same-site" with its
  # origin. This avoids false positives because if the request were made to a
  # cross-site resource, the value of "cross-site" would be assigned regardless
  # of the subseqent redirection.
  #
  # Because these conditions necessarily warrant mixed content, only templates
  # which can be configured to allow mixed content [1] can be used.
  #
  # [1] https://w3c.github.io/webappsec-mixed-content/#should-block-fetch
  fileName: sec-fetch-site-mixed.https
  headerName: sec-fetch-site
  all_subtests:
    - description: HTTPS downgrade-upgrade
      origins: [sameOrigin, httpOrigin, sameOrigin]
      expected: cross-site
  each_subtest:
    # Unused
    # TODO(jugglinmike) document rationale
    element-script.sub.html: []
    fetch.sub.html: []
    font.sub.html: []
    script-module-import-static.sub.html: []
    script-module-import-dynamic.sub.html: []
    cors-preflight.sub.html: []
    worker-dedicated-constructor.sub.html: []
    worker-dedicated-importscripts.sub.html: []

    appcache-manifest.sub.https.html: [{}]
    element-image.sub.html: [{}]
    element-video.sub.html: [{}]
    form-submission.sub.html:
      - description: ' - GET'
        method: GET
      - description: ' - POST'
        method: POST
    global-properties.sub.html:
      - description: ' - location'
        api: location
      - description: ' - location.href'
        api: location.href
      - description: ' - location.assign'
        api: location.assign
      - description: ' - location.replace'
        api: location.replace
    video-poster.sub.html: [{}]

- title: Fetch Metadata - Sec-Fetch-Mode
  # These tests are served over HTTPS so the induced requests will be both
  # same-origin with the document [1] and a potentially-trustworthy URL [2].
  #
  # [1] https://html.spec.whatwg.org/multipage/origin.html#same-origin
  # [2] https://w3c.github.io/webappsec-secure-contexts/#potentially-trustworthy-url
  fileName: sec-fetch-mode.https
  headerName: sec-fetch-mode
  each_subtest:
    # Unused
    # TODO(jugglinmike) document rationale
    worker-dedicated-importscripts.sub.html: []

    appcache-manifest.sub.https.html:
      - expected: no-cors
    cors-preflight.sub.html:
      - expected: cors
    element-image.sub.html:
      - description: no attributes
        expected: no-cors
      - description: crossorigin=""
        expected: cors
        elementAttrs: { crossorigin: '' }
      - description: crossorigin="anonymous"
        expected: cors
        elementAttrs: { crossorigin: anonymous }
      - description: crossorigin="use-credentials"
        expected: cors
        elementAttrs: { crossorigin: use-credentials }
    element-script.sub.html:
      - description: classic script
        expected: no-cors
      - description: module script
        expected: cors
        elementAttrs: { type: module }
      - description: classic script, crossorigin=""
        expected: cors
        elementAttrs: { crossorigin: '' }
      - description: classic script, crossorigin="anonymous"
        expected: cors
        elementAttrs: { crossorigin: anonymous }
      - description: classic script, crossorigin="use-credentials"
        expected: cors
        elementAttrs: { crossorigin: use-credentials }
    element-video.sub.html:
      - description: no attributes
        expected: no-cors
      - description: crossorigin=""
        expected: cors
        elementAttrs: { crossorigin: '' }
      - description: crossorigin="anonymous"
        expected: cors
        elementAttrs: { crossorigin: anonymous }
      - description: crossorigin="use-credentials"
        expected: cors
        elementAttrs: { crossorigin: use-credentials }
    fetch.sub.html:
      - description: no options
        expected: cors
      - description: 'mode: cors'
        expected: cors
        init: { mode: cors }
      - description: 'mode: no-cors'
        expected: no-cors
        init: { mode: no-cors }
      - description: 'mode: same-origin'
        expected: same-origin
        init: { mode: same-origin }
    font.sub.html:
      - expected: cors
    form-submission.sub.html:
      - description: GET
        method: GET
        expected: navigate
      - description: POST
        method: POST
        expected: navigate
    global-properties.sub.html:
      - description: location
        api: location
        expected: navigate
      - description: location.href
        api: location.href
        expected: navigate
      - description: location.assign
        api: location.assign
        expected: navigate
      - description: location.replace
        api: location.replace
        expected: navigate
    script-module-import-dynamic.sub.html:
      - expected: cors
    script-module-import-static.sub.html:
      - expected: cors
    video-poster.sub.html:
      - expected: no-cors
    worker-dedicated-constructor.sub.html:
      - description: classic script
        expected: same-origin
      - description: module script
        options: { type: module }
        expected: same-origin

- title: Fetch Metadata - Sec-Fetch-Dest
  fileName: sec-fetch-dest.https
  headerName: sec-fetch-dest
  each_subtest:
    appcache-manifest.sub.https.html:
      - expected: empty
    cors-preflight.sub.html:
      - expected: empty
    element-image.sub.html:
      - expected: image
    element-script.sub.html:
      - expected: script
    element-video.sub.html:
      - expected: video
    fetch.sub.html:
      - expected: empty
    font.sub.html:
      - expected: font
    form-submission.sub.html:
      - description: ' - GET'
        method: GET
        expected: document
      - description: ' - POST'
        method: POST
        expected: document
    global-properties.sub.html:
      - description: location
        api: location
        expected: document
      - description: location.href
        api: location.href
        expected: document
      - description: location.assign
        api: location.assign
        expected: document
      - description: location.replace
        api: location.replace
        expected: document
    script-module-import-dynamic.sub.html:
      - expected: script
    script-module-import-static.sub.html:
      - expected: script
    video-poster.sub.html:
      - expected: image
    worker-dedicated-constructor.sub.html:
      - description: classic script
        expected: worker
      - description: module script
        options: { type: module }
        expected: worker
    worker-dedicated-importscripts.sub.html:
      - expected: script

- title: Fetch Metadata - Sec-Fetch-User
  fileName: sec-fetch-user.https
  headerName: sec-fetch-user
  each_subtest:
    appcache-manifest.sub.https.html:
      - expected: NULL
    cors-preflight.sub.html:
      - expected: NULL
    element-image.sub.html:
      - expected: NULL
    element-script.sub.html:
      - expected: NULL
    element-video.sub.html:
      - expected: NULL
    fetch.sub.html:
      - expected: NULL
    font.sub.html:
      - expected: NULL
    form-submission.sub.html:
      - description: ' - GET'
        method: GET
        expected: NULL
      - description: ' - GET with user activation'
        method: GET
        userActivated: TRUE
        expected: ?1
      - description: ' - POST'
        method: POST
        expected: NULL
      - description: ' - POST with user activation'
        method: POST
        userActivated: TRUE
        expected: ?1
    global-properties.sub.html:
      - description: location
        api: location
        expected: NULL
      - description: location with user activation
        api: location
        userActivated: TRUE
        expected: ?1
      - description: location.href
        api: location.href
        expected: NULL
      - description: location.href with user activation
        api: location.href
        userActivated: TRUE
        expected: ?1
      - description: location.assign
        api: location.assign
        expected: NULL
      - description: location.assign with user activation
        api: location.assign
        userActivated: TRUE
        expected: ?1
      - description: location.replace
        api: location.replace
        expected: NULL
      - description: location.replace with user activation
        api: location.replace
        userActivated: TRUE
        expected: ?1
    script-module-import-dynamic.sub.html:
      - expected: NULL
    script-module-import-static.sub.html:
      - expected: NULL
    video-poster.sub.html:
      - expected: NULL
    worker-dedicated-constructor.sub.html:
      - description: classic script
        expected: NULL
      - description: module script
        options: { type: module }
        expected: NULL
    worker-dedicated-importscripts.sub.html:
      - expected: NULL
